1. Create a collection named orders.
> db.createCollection('orders')
{ "ok" : 1 }

2. Insert at least 3 documents that represent an order. IMPORTANT: See section below for fields.

db.orders.insert({
  orderDate: new Date(),
  orderTotal: 17000,
  lineItems: [
    {unitPrice: 400,
    quantity: 30,
    productName: 'Gizmo'},
    {unitPrice: 200,
    quantity: 20,
    productName: 'Mangle'},
    {unitPrice: 100,
    quantity: 10,
    productName: 'Ramba'},
  ]});


db.orders.insert({
  orderDate: new Date("2015-06-01"),
  orderTotal: 14000,
  lineItems: [
    {unitPrice: 400,
    quantity: 20,
    productName: 'Gizmo'},
    {unitPrice: 200,
    quantity: 20,
    productName: 'Mangle'},
    {unitPrice: 100,
    quantity: 20,
    productName: 'Ramba'},
  ]});

db.orders.insert({
  orderDate: new Date("2015-11-30"),
  orderTotal: 21000,
  lineItems: [
    {unitPrice: 400,
    quantity: 30,
    productName: 'Gizmo'},
    {unitPrice: 200,
    quantity: 30,
    productName: 'Mangle'},
    {unitPrice: 100,
    quantity: 30,
    productName: 'Ramba'},
  ]});


3. Find a single order document, any order document.

db.orders.find({orderTotal: 17000});

4. Find all orders and make them look pretty.

db.orders.find().pretty()

5. Find all orders with an orderDate that is prior to 1/1/2016.

db.orders.find({orderDate: {$lt: new Date('2016-01-01')}})

6. Find all orders with an orderDate that is after 1/1/2016.

db.orders.find({orderDate: {$gt: new Date('2016-01-01')}})

7. Find orders with lineItems that have a quantity that is less than 50, but greater than 5. HINT: Look at $and and dot notation.

db.orders.find({"lineItems.quantity": {$lt: 50}, "lineItems.quantity": {$gt: 5}})

8. Update one of your line items to 42.99. HINT: Look at dot notation

db.orders.update({"_id" : ObjectId("583f58049c57c8c9ef2b328b")}, {$set: {"lineItems.0.unitPrice": 42.99} })

9. Remove one of your orders.

db.orders.remove({"_id" : ObjectId("583f58049c57c8c9ef2b328b")})
